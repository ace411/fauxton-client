#!/usr/bin/env php
<?php

/**
 * 
 * fauxton-config script
 * 
 * @author Lochemem Bruno Michael
 * @license Apache-2.0
 */

foreach (
    [
        __DIR__ . '/../autoload.php',
        __DIR__ . '/../../autoload.php',
        __DIR__ . '/../vendor/autoload.php',
        __DIR__ . '/vendor/autoload.php',
        __DIR__ . '/../../vendor/autoload.php'
    ] as $file
) {
    if (file_exists($file)) {
        define('AUTOLOAD_PHP_FILE', $file);
        break;
    }    
}

if (!defined('AUTOLOAD_PHP_FILE')) {
     fwrite(STDERR,
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
    die(1);
}

require AUTOLOAD_PHP_FILE;

use \React\Filesystem\Filesystem;
use \React\Promise\Promise;
use \Chemem\Fauxton\Http;
use \Chemem\Fauxton\Config\State;
use function \Chemem\Bingo\Functional\Functors\Monads\IO\_print;
use function \Chemem\Bingo\Functional\Functors\Monads\IO\IO;
use function \Chemem\Bingo\Functional\Algorithms\compose;
use function \Chemem\Bingo\Functional\Algorithms\partialRight;

function _create($loop) : Promise
{
    return Filesystem::create($loop)->file(State::CLIENT_CONFIG_FILE)->open('cw');
}

function main($loop) : Promise
{
    $action = compose(
        Http\_readConfig, 
        partialRight(Http\_toPromise, function (string $result, callable $resolve) use ($loop) {
            _create($loop)->then(function (\React\Stream\WritableStreamInterface $stream) use ($resolve, $result) {
                $stream->write($result);
                $stream->end();
                $resolve(IO('Data written to file'));
            });
        })
    );
    return $action($loop);
}

$loop = \React\EventLoop\Factory::create();

$result = main($loop)->then(
    function ($result) {
        _print($result);
    },
    function ($error) {
        echo $error->getMessage();
    }
);

$loop->run();
